farklı boyuttaki diziler için farklı n değerleri ile binary search algoritmasının ne kadar iterasyonda sonuç bulduğunun elde edilmesi
java kodu

package binarysearch;

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author Lufo
 */
public class BinarySearch {

        public static int BinarySearch(int[] dizi, int anahtar)
    {
        int iter=0;
        int bas=0; 
        int son=dizi.length-1;
        int orta;
        while(bas<=son)
        {
        iter++;
        orta = (bas+son)/2;
        if (anahtar==dizi[orta])
        {
            System.out.println(iter+"iterasyonda");
            return orta;
            
            
        } 
        else if(anahtar<dizi[orta])
        {
            
            son = orta-1;
        }
        else
        {
           
            bas = orta+1;
        }
       
        }
        
        System.out.println(iter+"iterasyonda");
        return -1;
        
      }
        
    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        int n,sayi;
        System.out.println("Dizinin boyutunu giriniz");
        n=s.nextInt();
        int dizi[]=new int[n];
        Random r=new Random();
        for(int i=0;i<n;i++)
        {
            sayi=(int)(Math.random()*50);
            dizi[i]=sayi;
        }
        for (int i = 0; i < dizi.length; i++){
            sayi=dizi[i];
        }
        Arrays.sort(dizi);
        for (int i = 0; i < dizi.length; i++){
            sayi=dizi[i];
            
        int aranan;
        System.out.println("Aradığınız sayı?");
        Scanner ss=new Scanner(System.in);
        aranan=ss.nextInt();
        int indis = BinarySearch(dizi, aranan);
        if (indis != -1)
            System.out.println(indis+".konumda bulundu");
        else
                System.out.println("Bulunamadı");    
        }
        //System.out.println(dizi);
        
        
    }
}
